#!/usr/bin/env ruby

USERNAME = "root"
HOSTNAME = "proxima.d.h"

def help
	puts "vmmng [list | status | on | off | restart] {Vmid}"
	puts "	list - This will list all available VM's on the ESXi host"
	puts "	status {Vmid} - Checks the power state of the specified VM"
	puts "	on {Vmid} - Turns on the VM"
	puts "	off {Vmid} - Turns off the VM"
	puts "	restart {Vmid} - Turns on and off the VM"
	puts "	halt - Shutsdown the ESXi host"
	puts "	top - Displays the esxtop"
	abort
end

def connection
	return "ssh " + USERNAME + "@" + HOSTNAME
end

def list
	esxi_Cmd = "vim-cmd vmsvc/getallvms"
	output = `#{connection() + " " + esxi_Cmd}`
	puts output
end

def status
	esxi_Cmd = "vim-cmd vmsvc/power.getstate"
	vm_Id = ARGV[1]
	output = `#{connection() + " " + esxi_Cmd + " " + vm_Id}`
	puts output
end

def VmOn
	esxi_Cmd = "vim-cmd vmsvc/power.on"
	vm_Id = ARGV[1]
	output = `#{connection() + " " + esxi_Cmd + " " + vm_Id}`
	puts output
end

def VmOff
	esxi_Cmd = "vim-cmd vmsvc/power.off"
	vm_Id = ARGV[1]
	output = `#{connection() + " " + esxi_Cmd + " " + vm_Id}`
	puts output
end

def halt
	esxi_Cmd = "halt"
	puts "This will turn off the " + HOSTNAME + ". Are you sure? [Yes] "
	sure = gets.chomp
	if (sure == "Yes" or sure == "")
		output = `#{connection() + " " + esxi_Cmd}`
		puts output
	else
		abort
	end
end

def menu
	choice = ARGV[0]
	if (choice == "list")
		list()
	elsif (choice == "status")
		status()
	elsif (choice == "on")
		VmOn()
	elsif (choice == "off")
		VmOff()
	elsif (choice == "restart")
		VmOff()
		sleep 5
		VmOn()
		status()
	elsif (choice == "halt")
		halt()
	else
		help
	end
end

menu
